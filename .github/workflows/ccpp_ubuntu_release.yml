name: C/C++ CI ubuntu

on:
  release:
    types: [published]

jobs:
  build:

    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v1
    - name: update clock
      run: sudo hwclock -s
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y%m%d')"
    - name: change date in version
      run: sed -i "s/+UNKNOWN/_$(date '+%F')/" version.inc
    - name: update apt
      run: sudo apt update
    - name: install gtk2 glew
      run: sudo apt install libgtk2.0-dev libglew-dev libudev-dev
    - name: mkdir in deps
      run: mkdir deps/build
    - name: cmake deps
      working-directory: ./deps/build
      run: cmake ..
    - name: make deps
      working-directory: ./deps/build
      run: make
    - name: clean deps
      working-directory: ./deps/build
      run: rm -rf dep_*
    - name: mkdir build
      run: mkdir build
    - name: cmake
      working-directory: ./build
      run: cmake .. -DCMAKE_PREFIX_PATH="/home/runner/work/Slic3r/Slic3r/deps/build/destdir/usr/local" -DSLIC3R_STATIC=1
    - name: make slic3r
      working-directory: ./build
      run: make slic3r
    - name: create directory and copy into it
      working-directory: ./build
      run: |
        mkdir package
        mkdir package/bin
    - name: copy resources
      working-directory: ./build
      run: cp -Rf ../resources package/resources
    - name: copy bin
      working-directory: ./build
      run: cp -f src/superslicer package/bin/superslicer
    - name: create sh from echo
      working-directory: ./build/package
      run: |
        echo -e '#!/bin/bash\nDIR=$(readlink -f "$0" | xargs dirname)\nexport LD_LIBRARY_PATH="$DIR/bin"\nexec "$DIR/bin/superslicer" "$@"' >SuperSlicer
        chmod u+x superslicer
        tar -zcvf ../SuperSlicer.tar.gz .
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./build/SuperSlicer.tar.gz
        asset_name: SuperSlicer_${{ github.event.release.tag_name }}_ubu64_${{steps.date.outputs.date}}.tar.gz
        asset_content_type: application/gzip
